First Step:
რეგისტრაცია. ორი ტიპის იუზერი: პაციენტი და ექიმი.

პაციენტის სარეგისტრაციო მოთხოვნები: სახელი, გვარი, ქალაქი, პირადი ნომერი,
დაბადების თარიღი, სქესი, მისამართი, საკონტაქტო ნომოერი.
ოჯახის წევრების ჩამონათვალი (მოთხოვნები: პირადი ნომერი, ნათესაური კავშირი. 
სავარაუდო იმპლემენტაცია: მოცემული იქნება ორი ტექსტური ველი და პლიუს ღილაკი
"დამატება" რომელიც მიცემს საშუალებას დამატებით შეიყვანოს ოჯახის წევრი).

ჰიპერლინკით უნდა შევთავაზოთ გადასვლა დამატებითი ინფორმაციის შევსებაზე. სადაც
ჩაწერს ინფორმაციას ალერგიების და გადატანილი დაავადებების შესახებ. (ეს არ არის
აუცილებელი ველი და შეუძლია შეავსოს რეგისტრაციის გავლის შემდეგაც, ნებისმიერ
დროს, საკუთარი პროფილიდან).
---------------------------

პირველ ეტაპზე, რეგისტრაციის რექუესთის გაგზავნისთვის ავსებს მხოლოდ სახელს,
გვარს და პირად ნომერს. და თუ ადმინი დაუდასტურებს რექუესთს. შემდეგი რეგის
ტრაციის მცდელობისას იგი შეძლებს ქვედა ველების გახსნასაც.

ექიმის სარეგისტრაციო მოთხოვნები: სახელი, გვარი, ქალაქი, პირადი ნომერი,
მიმართულება (რისი ექიმია), რომელი უნივერსიტეტი დაამთავრა, ასაკი, მისამართი,
საკონტრაქტო ნომერი, რამდენწლიანი გამოცდილება აქვს, კვალიფიკაცია (დოქტორ და ა.შ.),
დამატებითი ინფორმაციისთვის ჰიპერლინკის მსგავსად უნდა გადადიოდეს და ავსებდეს საკუთარ
თავზე ინფორმაციას.

----------------------------
ადმინი რომელიც რეგისტრაციის გავლას შეძლებს საკუთარი პირადი ნომრით და
პაროლით. (ადმინს აქვს თავისი ფუნქციონალი, რექუესთები შემოდის ექიმებთან
დაკავშირებით).


Second Step:

პაციენტის LOGIN
სახელი, გვარი და ზოგადი პირადი ინფორმაცია.
უნდა იყოს ჩამონათვალი ჯავშნების, თუ აქვს მიმდინარე, ჯავშანთან დაკავშირებით უნდა იყოს: ექიმის სახელი,
ვიზიტის დრო, მიზეზი.

new jsp
უნდა შეეძლოს საკუთარ პროფილზე გადასვლა, სადაც შეუძლია შეცვალოს ინფორმაცია საკუთარ თავზე: გარდა პირადი ნომრისა,
სახელის, გვარის და დაბადების თარიღის.

new jsp
ჯავშნის გაკეთება. უნდა ირჩევდეს მიზეზს, მერე უნდა ირჩევდეს ექიმს ამ მიმართულების, დროს უნდა უგდებდეს
როდის არის თავისუფალი.



ექიმის LOGIN
სახელი, გვარი, მიმართულება და ზოგადი პირადი ინფორმაცია.
უნდა იყოს ჩამონათვალი თუ ვინმემ უკვე დაჯავშნა ამ ექიმთან ვიზიტი - დრო, პაციენტის სახელი, გვარი,
და უნდა შეეძლოს პროფილის გახსნა ამ პაციენტის, თუ უფრო მეტი ინფორმაცია ჭირდება მასზე.

უნდა შეეძლოს ვიზიტის დასრულება სადაც უნდა შეავსოს ინფორმაცია: დასკვნა, წამლები ...
ასევე დასრულებასთან ერთად უნდა შეეძლოს Redirect, რომელიც თხოვს ინფორმაციას:
ვისთან გადაამისამართოს, ექიმის სახელი, გვარი და მიზეზი თუ რატომ ამისამართებს.



------------------------------------------------------------------------------------
Third Step: Start Changing In memory DAO classes with SQL DAO classes

in this step we need to write two tables: Doctor and Patient

Variables (column number and names) fill be same as in Doctor class and
Patient class. On this Stage Let's don't write interfaces and write only classes.
Methods will be same as in: AdministratodDAO, PatientDAO, Doctor, Patient classes.

